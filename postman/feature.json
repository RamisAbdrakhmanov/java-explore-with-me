{
	"info": {
		"_postman_id": "98996a16-0418-4e9b-a3ba-944a277ecfc6",
		"name": "Comments",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25931446"
	},
	"item": [
		{
			"name": "Preparing",
			"item": [
				{
					"name": "Add user id 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(201); // код ответа должен быть равен 201 OK\r",
									"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
									"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
									"    console.log(pm.response.json());\r",
									"    pm.collectionVariables.set('userID1', pm.response.json().id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"user_name\",\r\n    \"email\":\"user_email@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add user id 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(201); // код ответа должен быть равен 201 OK\r",
									"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
									"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
									"    console.log(pm.response.json());\r",
									"    pm.collectionVariables.set('userID2', pm.response.json().id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"user_name\",\r\n    \"email\":\"user_two@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(201); // код ответа должен быть равен 201 OK\r",
									"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
									"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
									"    console.log(pm.response.json());\r",
									"    pm.collectionVariables.set('catID', pm.response.json().id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"category_name\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add event id 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(201); // код ответа должен быть равен 201 OK\r",
									"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
									"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
									"    console.log(pm.response.json());\r",
									"    pm.collectionVariables.set('eventID', pm.response.json().id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"annotation\": \"Voluptas ipsam voluptates aut dignissimos non eaque illum aut ut. Quibusdam corrupti earum repudiandae dolorem. Quod rerum quis autem. Aut saepe possimus et et sed et aut consequuntur.\",\r\n    \"category\": {{catID}},\r\n    \"description\": \"Soluta quia sit distinctio neque rerum omnis sit. Optio quia et consequatur cupiditate culpa. Odit ducimus ex suscipit veritatis dignissimos ipsam ut. Est et ea animi delectus sed autem odit. Dolorum aliquam quis voluptatem sunt similique commodi impedit. Sapiente tenetur nobis vitae tempora nesciunt officia laborum.\\n \\rInventore beatae aut officiis adipisci blanditiis perspiciatis dolorem est. Quo nesciunt explicabo optio nihil ab ipsa incidunt assumenda maxime. Quod esse quia aut assumenda dolores mollitia. Inventore rem molestiae quo neque ut.\\n \\rQui quidem aut aliquid sequi qui. Maxime nam sint. Aliquam aut esse facilis rerum quas voluptate recusandae. Voluptatem dolor consequuntur molestias nam maxime. Molestiae laborum aut ut facilis aliquam provident nobis voluptatem possimus.\",\r\n    \"eventDate\": \"2025-07-30 22:05:39\",\r\n    \"location\": {\r\n        \"lat\": -74.6858,\r\n        \"lon\": -29.2359\r\n    },\r\n    \"paid\": true,\r\n    \"participantLimit\": 777,\r\n    \"title\": \"Natus ad in laudantium non voluptatibus veniam architecto ducimus quidem.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userID1}}/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID1}}",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Published event",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(200); // код ответа должен быть равен 201 OK\r",
									"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
									"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"stateAction\":\"PUBLISH_EVENT\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/events/{{eventID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"events",
								"{{eventID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Add comment id 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(201); // код ответа должен быть равен 201 OK\r",
									"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
									"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
									"    console.log(pm.response.json());\r",
									"    pm.collectionVariables.set('commentID', pm.response.json().id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\":\"Comment\",\r\n  \"eventId\":{{eventID}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userID1}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID1}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add comment with wrong text",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(400); \r",
									"    pm.response.to.be.withBody; \r",
									"    pm.response.to.be.json; \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\":\"\",\r\n  \"eventId\":{{eventID}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/1/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add comment with wrong eventId 999",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(404); \r",
									"    pm.response.to.be.withBody; \r",
									"    pm.response.to.be.json; \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\":\"Comment\",\r\n  \"event\":999\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/1/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(200); \r",
									"    pm.response.to.be.withBody; \r",
									"    pm.response.to.be.json; \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userID1}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID1}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get comment with id 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(200); \r",
									"    pm.response.to.be.withBody; \r",
									"    pm.response.to.be.json; \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userID1}}/comments/{{commentID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID1}}",
								"comments",
								"{{commentID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get comment with wrong user id 999",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(404); \r",
									"    pm.response.to.be.withBody; \r",
									"    pm.response.to.be.json; \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/999/comments/{{commentID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"999",
								"comments",
								"{{commentID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get comment with wrong comment id 999",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(404); \r",
									"    pm.response.to.be.withBody; \r",
									"    pm.response.to.be.json; \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userID1}}/comments/999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID1}}",
								"comments",
								"999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get comment user didn't create this comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(404); \r",
									"    pm.response.to.be.withBody; \r",
									"    pm.response.to.be.json; \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userID2}}/comments/{{commentID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID2}}",
								"comments",
								"{{commentID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add comment id 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(201); \r",
									"    pm.response.to.be.withBody; \r",
									"    pm.response.to.be.json; \r",
									"    console.log(pm.response.json());\r",
									"    pm.collectionVariables.set('commentID2', pm.response.json().id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\":\"Comment 2\",\r\n  \"eventId\":{{eventID}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userID2}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID2}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete comment id 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(204); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userID2}}/comments/{{commentID2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID2}}",
								"comments",
								"{{commentID2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update comment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(200); \r",
									"    pm.response.to.be.withBody; \r",
									"    pm.response.to.be.json; \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\":\"Update comment\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userID1}}/comments/{{commentID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID1}}",
								"comments",
								"{{commentID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Update comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(200); \r",
									"    pm.response.to.be.withBody; \r",
									"    pm.response.to.be.json; \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\":\"Update comment ADMIN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/comments/{{commentID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments",
								"{{commentID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "All",
			"item": [
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
									"    pm.response.to.have.status(200); \r",
									"    pm.response.to.be.withBody; \r",
									"    pm.response.to.be.json; \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/comments/{{eventID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments",
								"{{eventID}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "userID1",
			"value": ""
		},
		{
			"key": "userID2",
			"value": "",
			"type": "string"
		},
		{
			"key": "catID",
			"value": "",
			"type": "string"
		},
		{
			"key": "eventID",
			"value": "",
			"type": "string"
		},
		{
			"key": "commentID",
			"value": "",
			"type": "string"
		},
		{
			"key": "commentID2",
			"value": "",
			"type": "string"
		}
	]
}